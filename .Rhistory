#############CLASE-6##########
rm(list=ls())
# Configurar el directorio de trabajo
directorio <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(directorio)
### Configuraciones iniciales ###
library(tidyverse)
library(grid)
library(gridExtra)
library(sf)
library(readxl)
## Carguemos los datos de sinadef
df <- read.csv("fallecidos_sinadef.csv", sep = "|")
View(df)
# Carguemos el diccionario
dict <- read_xlsx("Diccionario_Datos_SINADEF.xlsx")
# Nombres de las Columnas
colnames(df)
# Variable Fecha
df$FECHA
# Variable FECHA
str(df)
## Transformemos la columna FECHA a un Date
df$FECHA <- as.Date(df$FECHA)
# Variable FECHA
str(df)
#############CLASE-6##########
rm(list=ls())
source("C:/Users/leona/Desktop/CURSO R/CLASE.08/CLASE.08/CLASE-07.R", echo=TRUE)
source("C:/Users/leona/Desktop/CURSO R/CLASE.08/CLASE.08/CLASE-07.R", echo=TRUE)
source("C:/Users/leona/Desktop/CURSO R/CLASE.08/CLASE.08/CLASE-07.R", echo=TRUE)
rm(list=ls())
# Configurar el directorio de trabajo
directorio <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(directorio)
### Configuraciones iniciales ###
library(tidyverse)
library(grid)
library(gridExtra)
library(sf)
library(readxl)
## Carguemos los datos de sinadef
df <- read.csv("fallecidos_sinadef.csv", sep = "|")
# Carguemos el diccionario
dict <- read_xlsx("Diccionario_Datos_SINADEF.xlsx")
# Nombres de las Columnas
colnames(df)
# Variable FECHA
str(df)
## Transformemos la columna FECHA a un Date
df$FECHA <- as.Date(df$FECHA, format="%Y-%m-%d")
head(df$FECHA)
# Posibles valores de la columno AÑO
unique(df$AÑO)
# Posibles valores de la columno AÑO
sort(unique(df$AÑO))
# Posibles valores de la columna SEXO
unique(df$SEXO)
# Filtremos la información para el año 2020 considerando solo los sexos M y F
df <- df %>% filter(FECHA >= as.Date("2020-01-01") & FECHA <= as.Date("2020-12-31"),
SEXO %in% c("FEMENINO", "MASCULINO"))
View(df)
# Carguemos el mapa
departamental <- read_sf("DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("mapasDpto\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
View(departamental)
# Carguemos el mapa
departamental <- read_sf("C:\Users\leona\Desktop\CURSO R\CLASE.08\CLASE.08\mapaDpto\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("CLASE.08\CLASE.08\mapaDpto\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("CLASE.08\mapaDpto\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("mapaDpto\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
# Carguemos el mapa
departamental <- read_sf("C:\\Users\\leona\\Desktop\\CURSO R\\CLASE.08\\CLASE.08\\mapaDpto\\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
View(departamental)
# Gráfico 1:
df %>%
df$EDAD
df$EDAD
# Número de valores faltantes por columna
colSums(is.na(df))
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD))
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram()
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("2284B2", "EF0C58"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#2284B2", "#EF0C58"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#EF0C58","#2284B2"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")
# Gráfico 1:
df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#EF0C58","#2284B2"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")+facet_grid(SEXO~.)
# Gráfico 1:
graf1 <- df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#EF0C58","#2284B2"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")+
# Separando por SEXO
facet_grid(SEXO~.)
graf1 <- grid.arrange(graf1, bottom= textGrob("SINADEF", x=0.9, hjust = 1,
gp = gpar(fontface="italic")))
graf1 <- grid.arrange(graf1, bottom= textGrob("SINADEF", x=0.9, hjust = 1,
gp = gpar(fontface="italic", fontsize=14)))
graf1 <- grid.arrange(graf1, bottom= textGrob("SINADEF", x=0.9, hjust = 1,
gp = gpar(fontface="italic", fontsize=14)))
# Gráfico 1:
graf1 <- df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#EF0C58","#2284B2"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")+
# Separando por SEXO
facet_grid(SEXO~.)
# Gráfico 1:
graf1 <- df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#EF0C58","#2284B2"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")+
# Separando por SEXO
facet_grid(SEXO~.)
rm(list=ls())
#############CLASE-6##########
rm(list=ls())
# Configurar el directorio de trabajo
directorio <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(directorio)
### Configuraciones iniciales ###
library(tidyverse)
library(grid)
library(gridExtra)
library(sf)
library(readxl)
## Carguemos los datos de sinadef
df <- read.csv("fallecidos_sinadef.csv", sep = "|")
# Carguemos el diccionario
dict <- read_xlsx("Diccionario_Datos_SINADEF.xlsx")
# Nombres de las Columnas
colnames(df)
# Variable FECHA
str(df)
## Transformemos la columna FECHA a un Date
df$FECHA <- as.Date(df$FECHA, format="%Y-%m-%d")
head(df$FECHA)
# Posibles valores de la columno AÑO
sort(unique(df$AÑO))
# Posibles valores de la columna SEXO
unique(df$SEXO)
# Filtremos la información para el año 2020 considerando solo los sexos M y F
df <- df %>% filter(FECHA >= as.Date("2020-01-01") & FECHA <= as.Date("2020-12-31"),
SEXO %in% c("FEMENINO", "MASCULINO"))
# Carguemos el mapa
departamental <- read_sf("C:\\Users\\leona\\Desktop\\CURSO R\\CLASE.08\\CLASE.08\\mapaDpto\\DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
## GENERACIÓN DE GRÁFICOS ##
# Número de valores faltantes por columna
colSums(is.na(df))
# Gráfico 1:
graf1 <- df %>%
# Transformemos la columna EDAD
mutate(EDAD = as.numeric(EDAD)) %>% ggplot(aes(x=EDAD, fill=SEXO))+
geom_histogram(stat = "count")+scale_fill_manual(values = c("#EF0C58","#2284B2"))+
labs(y="Cantidad de Fallecidos", x="Edad de Fallecidos", title = "Histograma de la edad de los fallecidos",
caption="Fuente: Portal de Datos Abiertos")+
# Separando por SEXO
facet_grid(SEXO~.)
